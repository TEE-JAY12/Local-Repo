<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - My ASP.NET Application</title>
    <link href='https://fonts.googleapis.com/css?family=Lato:400,700 'rel='stylesheet' type='text/css'>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")

</head>
<body>
    <div class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                @Html.ActionLink("GigHub", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav">
                   
                    <li>@Html.ActionLink("Add a Gig ", "Create", "Gigs")</li>
                    
                </ul>
                @Html.Partial("_LoginPartial")
            </div>
        </div>
    </div>
    <div class="container body-content">
        @RenderBody()
        <hr />
        <footer>
            <p>&copy; @DateTime.Now.Year - My ASP.NET Application</p>
        </footer>
    </div>

    @Scripts.Render("~/bundles/lib")
   
    @RenderSection("scripts", required: false)
    <script type="text/x-template" id="notifications-template">
    <ul class="notifications">
        <% 
            _.each(nototifications,function(notification){
                  if (notification.type == 1){ %>
                       <li><span class="highlight"><%=notification.gig.artist.name%></span> has cancelled the gig at <%=notification.gig.venue%> at <%=moment(notification.gig.dateTime).format("D MMM HH:mm")%>. </li>
                   <% }
                  @*else if (notification.type == 2){

                  var changes=[],
                  orignalValues=[],
                  newValues=[];

                 if (notification.OriginalVenue != notification.gig.Venue){
                      changes.push('Venue');
                      orignalValues.push(notification.OriginalVenue);
                      newValues.push(notification.gig.Venue);
                   }
                  
                if(notification.OriginalDateTime != notification.gig.DateTime) {
                changes.push('date/time');
                orignalValues.push(moment.(notification.OriginalDateTime).format("D MMM HH:mm"));
                newValues.push(moment(notification.gig.DateTime).format("D MMM HH:mm"));
                }
               %>
                   <li><span class="highlight"><%= notification.gig.Artist.name %></span>has changed the <%=changes.join(' and ')%>of the gig from <%=orignalValues.join('/') %> to <%= newValues.join('/')%></li>
                <%
                }*@
                   
            } )
        %>

    </ul>
    </script>
    <script>
        $(document).ready(function(){
            $.getJSON("/api/nototifications", function (notifications) {
                if (notifications.length == 0)
                    return; 
                $(".js-notifcations-count")
                    .text(notifications.length)
                    .removeClass("hide");
                    
                $(".notifications").popover({
                    html: true,
                    title: "Notification",
                    content: function () {
                        var compiled = _.template($("#notifications-template").html());
                        return compiled({ nototifications: notifications });


                    },
                    placement: "bottom",
                    template: '<div class="popover popover-notifications" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'

                })
                    .on("show.bs.popover", function () {
                        $.post("/api/nototifications/MarkAsRead")
                         .done(function () {
                             $(".js-notifcations-count")
                            .text("")
                            .addClass("hide");
                        
                         });
               


                    });


               
               



                //$.getJSON("/api/nototifications/todisplay", function (notifications) {

                //    $(".js-notifcations-count")
                //            .text(notifications.length)
                //            .addClass("hide");

                //    $(".notifications").popover({
                //        html: true,
                //        title: "Notification",
                //        content: function () {
                //            var compiled = _.template($("#notifications-template").html());
                //            return compiled({ nototifications: notifications });


                //        },
                //        placement: "bottom",
                //        template: '<div class="popover popover-notifications" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'
                   

                //    })


                //});


                


            });
             
        })
    </script>
</body>
</html>
